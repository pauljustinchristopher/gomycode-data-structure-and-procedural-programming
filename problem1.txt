Algorithm SumOfUniqueElements
Input: firstSet[4] := [3, 1, 7, 9], secondSet[5] := [2, 4, 1, 9, 3]
Output: totalSum

Begin
    totalSum := 0

    // Add elements from firstSet that are not in secondSet
    for indexFirst := 0 to length(firstSet) - 1 do
        isCommon := false
        for indexSecond := 0 to length(secondSet) - 1 do
            if firstSet[indexFirst] = secondSet[indexSecond] then
                isCommon := true
        if isCommon = false then
            totalSum := totalSum + firstSet[indexFirst]

    // Add elements from secondSet that are not in firstSet
    for indexSecond := 0 to length(secondSet) - 1 do
        isCommon := false
        for indexFirst := 0 to length(firstSet) - 1 do
            if secondSet[indexSecond] = firstSet[indexFirst] then
                isCommon := true
        if isCommon = false then
            totalSum := totalSum + secondSet[indexSecond]

    Output totalSum
End
